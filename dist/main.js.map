{"version":3,"sources":["Service.js","utils.js","components/Player.js","main.js"],"names":["isReady","isLoaded","options","scriptUrl","width","height","playerVars","onLoad","onError","setOptions","mergeOptions","ready","Promise","resolve","reject","script","document","createElement","async","src","onload","window","onYouTubeIframeAPIReady","onerror","Error","body","appendChild","ytUrlRegex","getIdFromUrl","url","match","swapObject","obj","newObj","k","STATES","props","id","type","String","default","startAt","Number","endAt","quality","VytiaService","Object","watch","newId","loadById","getVideoOptions","newUrl","loadByUrl","methods","startSeconds","endSeconds","suggestedQuality","onReady","event","$emit","onApiChange","onStateChange","console","log","data","onPlaybackRateChange","onPlaybackQualityChange","videoUrl","videoId","method","autoplay","params","player","created","mounted","then","assign","YT","PlayerState","Player","$el","events","destroyed","destroy","render","h","PlayerComponent","install","Vue","component","prototype","$vytia","use","plugin"],"mappings":"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","file":"main.js","sourceRoot":"..\\src","sourcesContent":["export default {\n  isReady: false,\n  isLoaded: false,\n  options: {\n    scriptUrl: 'https://www.youtube.com/iframe_api',\n    width: 640,\n    height: 360,\n    playerVars: {},\n    onLoad: null,\n    onError: null,\n  },\n  setOptions(options = {}) {\n    this.options = options;\n  },\n  mergeOptions(options = {}) {\n    this.options = { ...this.options, ...options };\n  },\n  ready() {\n    return this.isReady ? Promise.resolve() : new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.async = true;\n      script.src = this.options.scriptUrl;\n      script.onload = () => {\n        this.isLoaded = true;\n        window.onYouTubeIframeAPIReady = () => {\n          this.isReady = true;\n          resolve();\n        };\n        typeof onLoad === 'function' && onLoad();\n      };\n      script.onerror = () => {\n        this.isLoaded = true;\n        typeof onError === 'function' && onError();\n        reject(new Error('SCRIPT_LOAD_FAILED'));\n      };\n      document.body.appendChild(script);\n    });\n  },\n};\n","// export get id from url\nconst ytUrlRegex = /(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\n\nexport function getIdFromUrl(url) {\n  const match = url.match(ytUrlRegex);\n\n  if (!match || !match[1]) {\n    return false;\n  }\n\n  return match[1];\n};\n\nexport function swapObject(obj){\n  const newObj = {};\n\n  for (var k in obj) {\n    newObj[obj[k]] = k;\n  }\n\n  return newObj;\n}\n","import VytiaService from '../Service';\nimport { getIdFromUrl, swapObject } from '../utils'\n\nconst STATES = {}\n\nexport default {\n  props: {\n    id: {\n      type: String,\n      default: null,\n    },\n    url: {\n      type: String,\n      default: null,\n    },\n    startAt: {\n      type: Number,\n      default: null,\n    },\n    endAt: {\n      type: Number,\n      default: null,\n    },\n    quality: {\n      type: String,\n      default: null,\n    },\n    width: {\n      type: [String, Number],\n      default() {\n        return VytiaService.options.width;\n      },\n    },\n    height: {\n      type: [String, Number],\n      default() {\n        return VytiaService.options.height;\n      },\n    },\n    playerVars: {\n      type: Object,\n      default() {\n        return { ...VytiaService.options.playerVars };\n      },\n    }\n  },\n\n  watch: {\n    id(newId) {\n      this.loadById(newId, this.getVideoOptions());\n    },\n    url(newUrl) {\n      this.loadByUrl(newUrl, this.getVideoOptions());\n    }\n  },\n\n  methods: {\n    getVideoOptions() {\n      return {\n        startSeconds: this.startAt,\n        endSeconds: this.endAt,\n        suggestedQuality: this.quality,\n      };\n    },\n    onReady(event) {\n      this.url && this.loadByUrl(this.url);\n      this.id && this.loadById(this.id);\n\n      // console.log('ready', event);\n      this.$emit('ready', event);\n    },\n    onError(event) {\n      // console.log('error', event);\n      this.$emit('error', event);\n    },\n    onApiChange(event) {\n      // console.log('api-change', event);\n      this.$emit('api-change', event);\n    },\n    onStateChange(event) {\n      console.log('state-change', event);\n      this.$emit('state-change', event);\n      this.$emit(STATES[event.data], event)\n    },\n    onPlaybackRateChange(event) {\n      // console.log('playback-rate-change', event);\n      this.$emit('playback-rate-change', event);\n    },\n    onPlaybackQualityChange(event) {\n      // console.log('playback-quality-change', event);\n      this.$emit('playback-quality-change', event);\n    },\n    loadByUrl(videoUrl, options = null) {\n      const videoId = getIdFromUrl(videoUrl);\n      this.loadById(videoId, options);\n    },\n    loadById(videoId, options = null) {\n      const method = Number(this.playerVars.autoplay) === 1 ? 'loadVideoById' : 'cueVideoById';\n      const params = options ? { videoId, ...options } : videoId;\n      console.log(params);\n      this.player[method](params);\n    }\n  },\n\n  created() {\n    this.player = null;\n  },\n\n  mounted() {\n    VytiaService.ready().then(() => {\n      Object.assign(STATES, swapObject(window.YT.PlayerState));\n\n      this.player = new window.YT.Player(this.$el, {\n        width: this.width,\n        height: this.height,\n        videoId: this.id,\n        playerVars: this.playerVars,\n        events: {\n          onReady: this.onReady,\n          onError: this.onError,\n          onApiChange: this.onApiChange,\n          onStateChange: this.onStateChange,\n          onPlaybackRateChange: this.onPlaybackRateChange,\n          onPlaybackQualityChange: this.onPlaybackQualityChange,\n        },\n      });\n    });\n  },\n\n  destroyed() {\n    this.player.destroy();\n  },\n\n  render: (h) => h('div'),\n};\n","// export { default as VytiaService } from './Service';\n// export { default as Player } from './components/Player';\n\nimport VytiaService from './Service';\nimport PlayerComponent from './components/Player';\n\nexport const Player = PlayerComponent;\nexport default {\n  install(Vue, options = {}) {\n    VytiaService.mergeOptions(options);\n    Vue.component('VytiaPlayer', PlayerComponent);\n    Vue.prototype.$vytia = VytiaService;\n  }\n}\n\ntypeof window.Vue === 'function' && window.Vue.use(plugin);\n"]}